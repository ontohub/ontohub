<?xml version='1.0' ?>
<Lib name="http://www.owl-ontologies.com/generations.owl">
  <Logic name="OWL" />
  <SpecDefn name="http://www.owl-ontologies.com/generations.owl">
    <Basicspec>Prefix: : &lt;http://www.owl-ontologies.com/generations.owl#&gt;
Prefix: owl: &lt;http://www.w3.org/2002/07/owl#&gt;
Prefix: rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
Prefix: rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
Prefix: xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;

Ontology: &lt;http://www.owl-ontologies.com/generations.owl&gt;

Annotations: versionInfo
             &quot;An example ontology created by Matthew Horridge&quot;^^xsd:string
Class: Brother
Class: Daughter
Class: Father
Class: Female
Class: GrandFather
Class: GrandMother
Class: GrandParent
Class: Male
Class: Man
Class: Mother
Class: OffSpring
Class: Parent
Class: Person
Class: Sex
Class: Sibling
Class: Sister
Class: Son
Class: Woman
ObjectProperty: hasChild
ObjectProperty: hasParent
ObjectProperty: hasSex
ObjectProperty: hasSibling
EquivalentClasses: Brother,
                   Person and (hasSibling some Person and hasSex value MaleSex)
EquivalentClasses: Daughter,
                   Person and hasParent some Person and hasSex value FemaleSex
EquivalentClasses: Father,
                   Person and hasChild some Person and hasSex value MaleSex
EquivalentClasses: Female,
                   hasSex value FemaleSex
EquivalentClasses: GrandFather,
                   Person and hasChild some (Person and hasChild some Person)
                   and hasSex value MaleSex
EquivalentClasses: GrandMother,
                   Person and hasChild some (Person and hasChild some Person)
                   and hasSex value FemaleSex
EquivalentClasses: GrandParent,
                   Person and hasChild some (Person and hasChild some Person)
EquivalentClasses: Male,
                   hasSex value MaleSex
EquivalentClasses: Man,
                   Person and hasSex value MaleSex
EquivalentClasses: Mother,
                   Person and hasChild some Person and hasSex value FemaleSex
EquivalentClasses: OffSpring,
                   Person and hasParent some Person
EquivalentClasses: Parent,
                   Person and hasChild some Person
EquivalentClasses: Sex,
                   {MaleSex, FemaleSex}
EquivalentClasses: Sibling,
                   Person and hasSibling some Person
EquivalentClasses: Sister,
                   Person and hasSibling some Person and hasSex value FemaleSex
EquivalentClasses: Son,
                   Person and hasParent some Person and hasSex value MaleSex
EquivalentClasses: Woman,
                   Person and hasSex value FemaleSex
Individual: FemaleSex
            Types: Sex
Individual: Gemma
            Types: Person
Individual: MaleSex
            Types: Sex
Individual: Matt
            Types: Person
Individual: Matthew
            Types: Person
Individual: Peter
            Types: Person
Individual: William
            Types: Person
SameIndividual: Matt,
                Matthew
Individual: Gemma
            Facts: hasSex FemaleSex
Individual: Matt
            Facts: hasParent Peter
Individual: Matt
            Facts: hasSex MaleSex
Individual: Matt
            Facts: hasSibling Gemma
Individual: Peter
            Facts: hasChild Matt
Individual: Peter
            Facts: hasParent William
Individual: Peter
            Facts: hasSex MaleSex
Individual: William
            Facts: hasChild Peter
Individual: William
            Facts: hasSex MaleSex
ObjectProperty: hasParent
                InverseOf: hasChild
ObjectProperty: hasSex
                Characteristics: Functional
ObjectProperty: hasSibling
                Characteristics: Symmetric
ObjectProperty: hasSex
                Range: Sex
Class: Brother
Class: Daughter
Class: Father
Class: Female
Class: GrandFather
Class: GrandMother
Class: GrandParent
Class: Male
Class: Man
Class: Mother
Class: OffSpring
Class: Parent
Class: Person
Class: Sex
Class: Sibling
Class: Sister
Class: Son
Class: Woman
ObjectProperty: hasChild
ObjectProperty: hasParent
ObjectProperty: hasSex
ObjectProperty: hasSibling
Individual: FemaleSex
Individual: Gemma
Individual: MaleSex
Individual: Matt
Individual: Matthew
Individual: Peter
Individual: William</Basicspec>
  </SpecDefn>
</Lib>
