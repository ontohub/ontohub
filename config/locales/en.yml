# Sample localization file for English. Add more files in this directory for other locales.
# See https://github.com/svenfuchs/rails-i18n/tree/master/rails%2Flocale for starting points.

en:
  successful_api_key_generation: API-Key was successfully generated
  api_key_headline: API-Key
  generate_initial_api_key: Generate initial API-Key
  generate_api_key: Generate new API-Key
  admin_deletion_error_message: |
    You probably shouldn't remove this account, as deleting
    it would leave the system with too few admins.
    The threshold level is: %{minimal_count}.
  wait: 'Please wait â€¦'
  state: 'Evaluation State'
  states:
    not_started_yet: not started yet
    failed: failed
    no_result: no result
    pending: pending
    fetching: fetching
    processing: processing
    done: done
  relation_list:
    team_user:
      placeholder: Add users to your team
      help: Enter at least three characters or complete e-mail addresses to start searching.
    permission:
      placeholder: Add teams or users
      help: Enter at least three characters to search for users or teams.
    support:
      placeholder: 'Add a support'
      help: Enter at least three characters to search for a support
  search:
    help: "Enter all words that must be included in the symbols. You can search a special kind by adding a 'kind:<value>'"
  support:
    placeholder:
      language: Support an new logic
      logic: Support an new language
    help:
      language: Enter characters to search for a logic
      logic: Enter characters to search for a language
  Mapping: Ontology-Mapping
  LogicMapping: Logic-Mapping
  repositories:
    index:
      clone_list_prefix: There is also a complete list of
      clone_list_link: repository clone-urls
  repository:
    clone:
      header: Clone with %{clone_type}
      text: You can clone the repository with %{git} (read-only) or %{ssh_git} (read-write, ssh-key required).
      git: git
      ssh_git: ssh-git
    upload_ssh_key: Upload an SSH key.
    delete: Delete Repository
    delete_error: "Can't delete repository: It contains %{oms} that is imported by another repository."
    deleted: Deleted
    deleting_at: 'This repository will be deleted irreversibly '
    undelete:
      headline: Undelete Repository
      description:
        If you undelete this repository, it will be accessible again with the same permissions as before the deletion.
      button: Undelete Repository
    undestroy:
      success: Successfully undeleted the Repository.
      failure: Cannot undelete the Repository - It has already been completely removed.
    errors: Errors
    permissions: Permissions
    edit: Edit repository
    urlmaps: Url Catalog
    access:
      change_hint: 'Caution! When setting the repository public, all reader permissions are removed.'
      options:
        private_rw: Privately readable, privately writable
        public_r: Publicly readable, privately writable
        public_rw: Publicly readable, publicly writable
      options_mirror:
        private_r: Privately readable, not writable at all
        public_r: Publicly readable, not writable at all
    remote_type:
      text:
        Changing this value may change the access as well.
        A mirror will be synchronized periodically. A fork is just a one-time copy.
    un_mirror:
      label: Un-mirror
      text: If you un-mirror this repository, it won't get synchronized with the remote reposoitory any more. There is no possibility to synchronize it ever again.
  repository_directory:
    create: Successfully created directory "%{name}".
    create_additional: "That is, the following directories have been created: %{directories}"
    form:
      submit: Create subdirectory
      placeholder:
        name: Directory name
      hint:
        slashes: Use slashes to directly create subdirectories.
  ontology:
    deleted:
      label: File deleted
      info: The defining file %{path} of this %{oms} was deleted. However, you can check the
      last_file_version: last version of that file
    delete: Delete
    delete_error: Can't delete %{oms_with_article} that (contains a child that) is imported by another %{oms}.
    delete_confirm:
      header_text: Are you sure about deleting the %{oms}?
      text: "Really delete the ontology %{name}?\n\nThe %{parent_text}%{children_text}defining file %{path} will be deleted as well."
      parent: 'parent ontology including its children and the '
      children: 'subontologies and the '
    parsing:
      errors:
        duplicate_name_many: "The name \"%{name}\" of the %{class} is ambiguous.\nIt is already used for either a %{type1} or a %{type2}.\nThe %{class} \"%{name}\" is located at %{range}."
        duplicate_name_one: "The name \"%{name}\" of the %{class} is ambiguous.\nIt is already used as %{type_with_article}.\nThe %{class} \"%{name}\" is located at %{range}."
  permission:
    delete_header: Are you sure you want to delete the permission?
    delete_desc: If you remove this %{role} permission, %{subject} won't be able to access the %{class} %{item} according to it.
    delete_btn: Delete Permission
    errors:
      falling_short_of_owner_count: |
        You can't remove this owner permission, as deleting
        it would leave the %{item} with too few owners.
        The threshold level is: %{minimal_count}.
  files:
    delete:
      button_text: Delete File
      header_text: Are you sure about deleting the file?
      body_text:
        If you delete the file %{path}, only the file is deleted from the repository.
        The containing ontologies will still be accessible, but the file cannot be referenced any more from other ontology files.
    discard: Discard
    discard_confirmation: You made changes to the code. Are you sure you want to discard them?
    discard_desc: |
      If you discard the changes, the textarea on the left will be reset to the previous state.

      This action is irreversible!
  sentences:
    sentence:
      defined_in:
        defined in %{link}
  axioms:
    index:
      display_only_self_defined_axioms:
        Currently we display only self-defined axioms.
      to_display_only_self_defined_axioms:
        to display only the self-defined axioms.
      display_all_axioms:
        Currently we display all axioms, self-defined and imported
        ones.
      to_display_all_axioms:
        to display all related axioms (including translations/blendoids).
  theorems:
    index:
      prove: Prove all theorems
      name: Name
      text: Text
      proof_status: Proof Status
    show:
      prove: Prove this theorem
      proof_attempts_empty: There are no proof attempts.
      unprovable: This theorem was proven by static analysis. It is identical to an axiom.
  axiom_selection:
    manual_axiom_selection: Manual
    sine_axiom_selection: SInE
  proofs:
    new:
      title: 'Attempt to prove %{klass} %{resource}'
      theorems_definitions: Theorems to prove
      theorem_definition: Theorem to prove
      configuration: Proving Configuration
      send: 'Prove'
      klass:
        theorem: 'theorem'
        ontology_version: 'ontology'
      provers:
        label: Provers
        none_is_default: Selecting none will result in using the default prover.
        select_all: Select all
        select_none: Select none
      axiom_selection:
        method: Axiom Selection Method
        manual_axiom_selection:
          headline: Manual Axiom Selection
        sine_axiom_selection:
          headline: SInE Axiom Selection
          hints:
            commonness_threshold: Greater values result in selecting more axioms containing uncommon symbols.
            depth_limit: Number of SInE selection iterations. Greater values result in selecting more axioms. The value '-1' is interpreted as infinity.
            tolerance: Greater values result in selecting more axioms.
      axioms:
        none_is_default: Selecting none will result in using all axioms.
        select_all: Select all
        select_none: Select none
      timeout:
        label: Timeout
        hint: The timeout will be used for each proof obligation individually.
        default: Default (10 seconds)
        day: day
        hour: hour
        minute: minute
        second: second
    create:
      starting_jobs: Proving jobs have been scheduled. Please come back in a few moments.
      invalid_resource: Invalid proving request.
  proof_evaluation_state_updater:
    failed_proof_attempts: "Failed proof attempts: %{proof_attempts}"
  proof_attempts:
    index:
      number: Number
      date: Date
      time_taken: Time taken
      prover: Prover
      status: Proof Status
    show:
      headline: Proof Attempt of
      no_sentences: None
    configuration:
      headline: Configuration
      timeout:
        headline: Timeout
        text: "%{timeout} seconds"
      prover:
        headline: Prover
      axioms:
        headline: Selected axioms
      logic_mapping:
        headline: Selected logic mapping
    result:
      headline: Result
      time_taken:
        headline: Time taken
        text: "%{time_taken} seconds"
      used_prover:
        headline: Used prover
      tactic_script:
        headline: Tactic script
      used_axioms:
        headline: Used axioms
      used_theorems:
        headline: Used theorems
      generated_axioms:
        headline: Generated axioms used
      prover_output:
        headline: Prover output
        link_text: Show prover output
    tactic_script:
      time_limit:
        text: "Time limit: %{time_limit}"
      extra_options:
        headline: "Extra options:"
    theorem_definition: Definition of %{theorem}
  prover_outputs:
    show:
      head_html: "Prover Output for %{theorem}'s %{proof_attempt_text}"
      head_attempt_html: "proof attempt #%{number}"
      prover: Prover
      prover_output: Prover Output
  have:
    one: has
    other: have
  signup:
    welcome: Welcome %{name}
    what_happens: |
          For full qualified access to Ontohub you have to confirm your e-mail address.
          We have sent an mail with instructions for you.
    wiki: |
        You can find more information about Ontohub in the %{link}.
        Moreover, context specific information is available with the "Help" button, leading to a specfic wiki page.
    need_help: Need Help?
  delete_repository: Are you sure about deleting the Repository?
  delete_repository_desc: |
      If you delete this repository, all ontologies, which are related to this repository, will be deleted too.
      This action is irreversible!
  cancel: Cancel
  edit: Edit
  delete: Delete
  status:
    processing_ontologies: Ontologies that are being processed
    information_title: Information related to the status
    information_description: |
      This contains information about different aspects of the
      application that might be relevant for administrative and
      error-finding purposes.
    no_iri:
      no processing iri
    errored_ontologies: Ontologies which encountered errors during evaluation
    details: Details
    ontology_count_by_state: Ontologies-count by state
    iris_marked_as_processing: Count of iris that are processing
    overview: Overview
    other_data: Other data
  ontologies:
    download: download
  oops:
    responses: We have %{all} Responses, %{global} of them represent global 
  simple_form:
    labels:
      proof:
        axioms: Manual Axiom Selection
  info:
    javascript_warning: JavaScript is deactivated in your browser. Some features are only accessible with active JavaScript.
